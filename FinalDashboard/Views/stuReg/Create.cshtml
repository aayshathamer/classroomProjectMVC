@model FinalDashboard.Models.student

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Log.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.semester)
            @Html.DropDownListFor(model => model.semester, new List<SelectListItem>
{
            new SelectListItem { Text = "9", Value = "9" },


        }, "current semester", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.semester, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shift)
            @Html.DropDownListFor(model => model.shift, new List<SelectListItem>
{
        new SelectListItem { Text = "Morning", Value = "Morning" },
        new SelectListItem { Text = "Evening", Value = "Evening" },
        new SelectListItem { Text = "Afternoon", Value = "Afternoon" },

        // Add more countries as needed
    }, "Select shift", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.shift, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dep)
            @Html.DropDownListFor(model => model.dep, new List<SelectListItem>
{
        new SelectListItem { Text = "SWE", Value = "SWE" },
        new SelectListItem { Text = "CS", Value = "CS" },
        new SelectListItem { Text = "ICT", Value = "ICT" },

        // Add more countries as needed
    }, "Select a department", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.dep, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.gender)
            @Html.DropDownListFor(model => model.gender, new List<SelectListItem>
{
            new SelectListItem { Text = "male", Value = "male" },
            new SelectListItem { Text = "female", Value = "female" },

            // Add more countries as needed
        }, "Select a gender", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label>@ViewBag.Notification</label>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("login", "Index", "login")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}